language: cpp
compiler: gcc

# Qt packages for Linux
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages: &shared_deps
      - sqlite3
      - libqt5sql5-sqlite
      - qtbase5-dev
      - qtdeclarative5-dev
      - qtmultimedia5-dev
      - qttools5-dev
      - qttools5-dev-tools
      - lcov

# OS X build
matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      env:
        - COVERAGE=1
        - PACKAGE=1
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - *shared_deps
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      dist: trusty
      sudo: required
    - os: osx
      env:
        - PACKAGE=1

cache:
  directories:
    - release/sites/node_modules

# Install coveralls sender
before_install:
  - eval "${MATRIX_EVAL}"
  - if [[ "$COVERAGE" == "1" ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      pip install --user cpp-coveralls
    ; fi

# Qt packages for OS X
install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update &&
      brew install qt5 &&
      QT_PATH=$(find /usr/local/Cellar/qt/* -maxdepth 0 -type d | head -1)
      PATH=$QT_PATH/bin:$PATH &&
      export PATH
    ; fi

before_script:
  # Start X before running tests on Linux
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      export DISPLAY=:99.0 &&
      sh -e /etc/init.d/xvfb start &&
      sleep 3
    ; fi
  # Set the OpenSSL path on OSX
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export OPENSSL_ROOT_DIR=/usr/local/opt/openssl/
    ; fi

# Build Grabber
script:
  - ./scripts/build.sh
  - ./build/tests/tests

after_success:
  # Clean-up workspace
  - git checkout .
  # Upload code coverage (codecov)
  - if [[ "$COVERAGE" == 1 ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      lcov --directory . --capture --output-file coverage.info &&
      lcov --remove coverage.info '/usr/*' --output-file coverage.info &&
      lcov --list coverage.info &&
      bash <(curl -s https://codecov.io/bash)
    ; fi
  # Upload code coverage (coveralls)
  - if [[ "$COVERAGE" == "1" ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      coveralls --exclude build --exclude e2e --exclude tests --exclude CrashReporter --gcov-options '\-lp'
    ; fi
  # Generate release name
  - if [[ "$TRAVIS_TAG" == "" ]]; then
      export BUILD_LABEL=develop
    ; else
      export BUILD_LABEL=$TRAVIS_TAG
    ; fi
  # Build and upload release
  - if [[ "$PACKAGE" == "1" ]] && [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      ./scripts/package-linux.sh &&
      mv "Grabber.tar.gz" "Grabber_${BUILD_LABEL}.tar.gz"
    ; fi
  - if [[ "$PACKAGE" == "1" ]] && [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      ./scripts/package-mac.sh &&
      mv "Grabber.dmg" "Grabber_${BUILD_LABEL}.dmg"
    ; fi

# Add the nightly tag on develop package-enabled commits to push them to Github
before_deploy:
  - if [[ "$PACKAGE" == "1" ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]] && [[ "$TRAVIS_BRANCH" == "develop" ]]; then
      export TRAVIS_TAG=nightly &&
      git tag -f $TRAVIS_TAG
    ; fi

deploy:
  # Nightly
  - provider: releases
    api_key:
      secure: k8kiBfDzlVuL1x2A9Eh3U3uWMZzcKmx9GZjMWjC7wgxmG83cSZRu6RVyFamqbtmoFR8CRoCb+WFRxzUTn46sav6P4w329U2S2Izf3xeSGnONFz5GALqWIMbJ6tS81pQpLYn6GUKbey4f6uqhuyouVAj95lRu2W7K4/lN/Yb4hgA=
    file:
      - Grabber_$BUILD_LABEL.tar.gz
      - Grabber_$BUILD_LABEL.dmg
    skip_cleanup: true
    draft: true
    overwrite: true
    on:
      repo: Bionus/imgbrd-grabber
      branch: develop
      condition: $PACKAGE == 1
  # Releases
  - provider: releases
    api_key:
      secure: k8kiBfDzlVuL1x2A9Eh3U3uWMZzcKmx9GZjMWjC7wgxmG83cSZRu6RVyFamqbtmoFR8CRoCb+WFRxzUTn46sav6P4w329U2S2Izf3xeSGnONFz5GALqWIMbJ6tS81pQpLYn6GUKbey4f6uqhuyouVAj95lRu2W7K4/lN/Yb4hgA=
    file:
      - Grabber_$BUILD_LABEL.tar.gz
      - Grabber_$BUILD_LABEL.dmg
    skip_cleanup: true
    draft: false
    overwrite: true
    on:
      repo: Bionus/imgbrd-grabber
      branch: master
      tags: true
      condition: $PACKAGE == 1