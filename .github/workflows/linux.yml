name: Linux
on: [push, pull_request]

jobs:
  Linux:
    timeout-minutes: 20
    runs-on: ubuntu-18.04

    env:
      GRABBER_VERSION: nightly
      GRABBER_IS_NIGHTLY: 1
      PLATFORM_NAME: x64

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: recursive

    - name: Install packages
      run: sudo apt-get install libpulse-dev

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache-${{ hashFiles('.github/workflows/linux.yml') }}

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.9.0
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: 5.15.1

    - name: Create build dir
      run: mkdir build

    - name: Configure
      working-directory: build
      run: cmake ../src -DCMAKE_BUILD_TYPE=Release -DNIGHTLY=$GRABBER_IS_NIGHTLY -DCOMMIT="$GITHUB_SHA" -DVERSION="$GRABBER_VERSION"

    - name: Compile
      working-directory: build
      run: |
        cmake --build . --config Release --target sites
        cmake --build . --config Release

    - name: Test
      uses: GabrielBB/xvfb-action@v1.2
      with:
        working-directory: src
        run: ../build/tests/tests

    - name: Generate package
      run: |
        ./scripts/package-linux.sh
        mv Grabber.tar.gz Grabber_nightly.tar.gz

    - name: Get date for Nightly body
      id: date
      if: ${{ github.event_name != 'pull_request' }}
      run: echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M:%S %Z')"

    - name: Nightly
      uses: ncipollo/release-action@v1
      if: ${{ github.event_name != 'pull_request' }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: nightly-github
        name: Nightly (Github)
        allowUpdates: true
        draft: false
        prerelease: true
        artifacts: Grabber_*.tar.gz
        body: |
          Nightly automated builds from the develop branch.
          Automatically uploaded by Github actions, **use at your own risk**!

          **Head:** ${{ github.sha }}
          **Date:** ${{ steps.date.outputs.date }}
