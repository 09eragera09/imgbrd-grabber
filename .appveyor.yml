version: '{build}'
image: Visual Studio 2017

environment:
  APPVEYOR: 1
  DEPLOY: 0
  BREAKPAD: 0
  MYSQL_DRIVER_URL: https://github.com/thecodemonkey86/qt_mysql_driver/files/4114066/qsqlmysql.dll_Qt_SQL_driver_5.12.6_MSVC2017_64-Bit.zip
  APNG_PLUGIN: apng-1.1.2-65.12.6
  QSCINTILLA_VERSION: QScintilla_gpl-2.10.8

  matrix:
    # MSVC x86
    - PLATFORM: amd64_x86
      QTDIR: C:\Qt\5.12.6\msvc2017
      OPENSSLDIR: C:\OpenSSL-v111-Win32
      MAKE: nmake
      MAKEFILES: NMake Makefiles
      DEPLOY: 1

    # MSVC x64
    - PLATFORM: amd64
      QTDIR: C:\Qt\5.12.6\msvc2017_64
      OPENSSLDIR: C:\OpenSSL-v111-Win64
      MAKE: nmake
      MAKEFILES: NMake Makefiles
      DEPLOY: 1

    # MinGW
    - PLATFORM: mingw
      QTDIR: C:\Qt\5.12.6\mingw73_32
      OPENSSLDIR: C:\OpenSSL-v111-Win32
      MAKE: mingw32-make
      MAKEFILES: MinGW Makefiles

cache:
  - src\sites\node_modules -> src\sites\package.json
  - mysql_driver -> .appveyor.yml
  - apng-1.1.2-65.12.6 -> .appveyor.yml
  - QScintilla_gpl-2.10.8 -> .appveyor.yml
  - depot_tools -> .appveyor.yml
  - breakpad -> .appveyor.yml

init:
  - git config --global core.autocrlf input
  - if %PLATFORM%==mingw set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if %PLATFORM%==mingw set PATH=C:\Qt\Tools\mingw530_32\bin;%PATH%
  - set PATH=%QTDIR%\bin;%PATH%
  - if not %PLATFORM%==mingw call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" %PLATFORM%
  - set PATH=%PATH%;"C:\\Program Files (x86)\\Inno Setup 5"
  - if "%APPVEYOR_REPO_TAG%"=="true" (set "GRABBER_IS_NIGHTLY=0") else (set "GRABBER_IS_NIGHTLY=1")
  - if "%APPVEYOR_REPO_TAG%"=="true" (set "GRABBER_VERSION=%APPVEYOR_REPO_TAG_NAME%") else (set "GRABBER_VERSION=nightly")
  - if "%PLATFORM%"=="x86" (set "PLATFORM_NAME=x86") else (set "PLATFORM_NAME=x64")

install:
  - git submodule update --init --recursive
  - ps: Install-Product node 10

build_script:
  # Download Google tools and put them in the PATH (required for Google Breakpad)
  - if not exist "depot_tools" appveyor DownloadFile https://storage.googleapis.com/chrome-infra/depot_tools.zip
  - if not exist "depot_tools" 7z x "depot_tools.zip" -odepot_tools -y
  - depot_tools\update_depot_tools
  - set PATH=%APPVEYOR_BUILD_FOLDER%\depot_tools;%PATH%

  # Build Google Breakpad
  - set "BREAKPAD_BUILD=0"
  - if %BREAKPAD%==1 if not exist "breakpad" set "BREAKPAD_BUILD=1"
  - if %BREAKPAD_BUILD%==1 mkdir breakpad
  - if %BREAKPAD_BUILD%==1 cd breakpad
  - if %BREAKPAD_BUILD%==1 gclient config https://github.com/google/breakpad --unmanaged --name=src
  - if %BREAKPAD_BUILD%==1 gclient sync
  - if %BREAKPAD_BUILD%==1 cd src\src\client\windows
  - if %BREAKPAD_BUILD%==1 sed -i -e "s/<\/RuntimeLibrary>/DLL<\/RuntimeLibrary>/g;" *.vcxproj # <TreatWChar_tAsBuiltInType>false<\/TreatWChar_tAsBuiltInType>
  - if %BREAKPAD_BUILD%==1 sed -i -e "s/<\/RuntimeLibrary>/DLL<\/RuntimeLibrary>/g;" */*.vcxproj
  - if %BREAKPAD_BUILD%==1 sed -i -e "s/<\/RuntimeLibrary>/DLL<\/RuntimeLibrary>/g;" */*/*.vcxproj
  - if %BREAKPAD_BUILD%==1 if "%PLATFORM%"=="x86" (set "BREAKPAD_PLATFORM=Win32") else (set "BREAKPAD_PLATFORM=x64")
  - if %BREAKPAD_BUILD%==1 msbuild breakpad_client.sln /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll" /m /verbosity:normal /p:Configuration=Release /p:Platform="%BREAKPAD_PLATFORM%"
  - if %BREAKPAD_BUILD%==1 cd "%APPVEYOR_BUILD_FOLDER%"

  # Build QScintilla
  - set "QSCINTILLA_BUILD=0"
  - if %DEPLOY%==1 if not exist %QSCINTILLA_VERSION% set "QSCINTILLA_BUILD=1"
  - if %QSCINTILLA_BUILD%==1 curl -L "https://sourceforge.net/projects/pyqt/files/QScintilla2/QScintilla-2.10.8/%QSCINTILLA_VERSION%.zip" -o "%QSCINTILLA_VERSION%.zip"
  - if %QSCINTILLA_BUILD%==1 7z x "%QSCINTILLA_VERSION%.zip" -y
  - if %DEPLOY%==1 call "%QTDIR%\bin\qtenv2.bat"
  - if %DEPLOY%==1 cd "%APPVEYOR_BUILD_FOLDER%/%QSCINTILLA_VERSION%/Qt4Qt5"
  - if %QSCINTILLA_BUILD%==1 qmake qscintilla.pro
  - if %QSCINTILLA_BUILD%==1 if not %PLATFORM%==mingw (nmake) else (mingw32-make)
  - if %DEPLOY%==1 if not %PLATFORM%==mingw (nmake install) else (mingw32-make install)
  - if %DEPLOY%==1 cd "%APPVEYOR_BUILD_FOLDER%"

  # Build Grabber
  - if %GRABBER_IS_NIGHTLY%==1 (set "BUILD_TYPE=Release") else (set "BUILD_TYPE=RelWithDebInfo")
  - mkdir build
  - cd build
  - cmake ..\src -G "%MAKEFILES%" -DCMAKE_BUILD_TYPE=%BUILD_TYPE% -DNIGHTLY=%GRABBER_IS_NIGHTLY% -DCOMMIT="%APPVEYOR_REPO_COMMIT%" -DVERSION="%GRABBER_VERSION%" -DBREAKPAD="%APPVEYOR_BUILD_FOLDER%/breakpad/src"
  - if not %PLATFORM%==mingw (nmake) else (mingw32-make)
  - cd ..

  # Download APNG plugin DLL
  - if %DEPLOY%==1 if not exist %APNG_PLUGIN% curl -L https://install.skycoder42.de/qtmodules/windows_x86/qt5126/qt.qt5.5126.skycoder42.apng.win32_msvc2017/1.1.2-65.12.6.7z -o "%APNG_PLUGIN%.7z"
  - if %DEPLOY%==1 if not exist %APNG_PLUGIN% 7z x "%APNG_PLUGIN%.7z" -y -o"%APNG_PLUGIN%"

  # Download MySQL DLL
  - if %DEPLOY%==1 if not exist "mysql_driver" curl -L -o "mysql_driver.zip" "%MYSQL_DRIVER_URL%"
  - if %DEPLOY%==1 if not exist "mysql_driver" 7z x "mysql_driver.zip" -y -o"mysql_driver"
  - if %DEPLOY%==1 copy /Y "mysql_driver\sqldrivers\*.dll" "%QTDIR%\plugins\sqldrivers"

  # Generate installer
  - if %DEPLOY%==1 iscc /Q /DMyAppVersion="%GRABBER_VERSION%" /DPlatformName="%PLATFORM_NAME%" /DQtDir="%QTDIR%\bin" /DOpenSSLDir="%OPENSSLDIR%" /DMySQLDir="%APPVEYOR_BUILD_FOLDER%\mysql_driver" /DQtApngDll="%APPVEYOR_BUILD_FOLDER%\%APNG_PLUGIN%\5.12.6\msvc2017\plugins\imageformats\qapng.dll" scripts/windows-setup/setup.iss

  # Package symbol files to zip
  - if %DEPLOY%==1 if "%BUILD_TYPE%"=="RelWithDebInfo" 7z a "scripts\windows-setup\Grabber_%GRABBER_VERSION%_%PLATFORM_NAME%_symbols.zip" ".\build\gui\Grabber.pdb" ".\build\cli\Grabber-cli.pdb"

test_script:
  - cd src
  - ..\build\tests\tests.exe -s
  - cd sites
  - npm run test
  - cd ..\..

artifacts:
  - path: scripts\windows-setup\Grabber_*.exe
    name: windows_setup
  - path: scripts\windows-setup\Grabber_*_symbols.zip
    name: windows_symbols_zip

deploy:
  # Nightly
  - provider: GitHub
    tag: nightly
    release: Nightly
    draft: false
    prerelease: true
    force_update: true
    artifact: windows_setup
    description: |
      Nightly automated builds from the develop branch.
      Automatically uploaded by AppVeyor, **use at your own risk**!

      **Head:** $(APPVEYOR_REPO_COMMIT)
      **Date:** $(APPVEYOR_REPO_COMMIT_TIMESTAMP)
    auth_token:
      secure: mUYQ72KBJUaYr5Bhy2HkBkEY13Q7k27Q7IRmOGXfTOq7YnXUS9PikETcZvzCfiVu
    on:
      branch: develop
      DEPLOY: 1

  # Releases
  - provider: GitHub
    tag: $(APPVEYOR_REPO_TAG_NAME)
    release: $(APPVEYOR_REPO_TAG_NAME)
    draft: true
    prerelease: false
    force_update: true
    artifact: windows_setup, windows_symbols_zip
    auth_token:
      secure: mUYQ72KBJUaYr5Bhy2HkBkEY13Q7k27Q7IRmOGXfTOq7YnXUS9PikETcZvzCfiVu
    on:
      APPVEYOR_REPO_TAG: true
      NEVER_TRUE: 1
